{"version":3,"sources":["../app.ts"],"names":[],"mappings":";;AAAA,mCAAmC;AACnC,6BAA6B;AAE7B,4CAA4C;AAE5C,iCAAiC;AAEjC,iDAAiD;AAEjD,0CAA0C;AAE1C,0CAA6C;AAC7C,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,MAAM,YAAY,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAE9C,MAAM,iBAAiB,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,MAAM,CAAC;IAC7D,aAAa,EAAE,QAAQ;IACvB,OAAO,EAAE,KAAK;IACd,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,CAAC;IACjD,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,CAAC;CACpD,CAAC,CAAC;AAEH,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AAEtB,yBAAyB;AACzB,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAErC,oBAAoB;AACpB,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,iBAAiB,CAAC,MAAM,CAAC,CAAC;AAC5C,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AAC9B,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;AAEhD,kDAAkD;AAClD,mEAAmE;AACnE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACpD,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAGxD,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAW,CAAC,CAAC;AAC1B,4BAA4B;AAE5B,yCAAyC;AACzC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IACzB,IAAI,GAAQ,CAAC;IACb,GAAG,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;IAE7B,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC;IACjB,IAAI,CAAC,GAAG,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC;AAEH,gBAAgB;AAChB,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IAC9B,kDAAkD;IAClD,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;IACjC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;IAEnE,wBAAwB;IACxB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC;IAC9B,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC;AAEH,wBAAwB;AAEX,QAAA,SAAS,GAAwB,GAAG,CAAC","file":"../app.js","sourcesContent":["import * as express from \"express\";\nimport * as path from \"path\";\n\n// import * as favicon from \"serve-favicon\";\n\nimport * as logger from \"morgan\";\n\n// import * as cookieParser from \"cookie-parser\";\n\nimport * as bodyParser from \"body-parser\";\n\nimport { indexRouter } from \"./routes/index\";\nconst mongoose = require(\"mongoose\");\nconst cookieParser = require(\"cookie-parser\");\n\nconst expressHandleBars = require(\"express-handlebars\").create({\n  defaultLayout: \"layout\",\n  extname: \"hbs\",\n  layoutsDir: path.join(__dirname, \"views/layouts\"),\n  partialsDir: path.join(__dirname, \"views/partials\"),\n});\n\nconst app = express();\n\n// connecting to mongoose\nmongoose.connect(\"localhost:27017/\");\n\n// view engine setup\napp.engine(\"hbs\", expressHandleBars.engine);\napp.set(\"view engine\", \"hbs\");\napp.set(\"views\", path.join(__dirname, \"views\"));\n\n// uncomment after placing your favicon in /public\n// app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger(\"dev\"));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, \"public\")));\n\n\napp.use(\"/\", indexRouter);\n// app.use('/users', users);\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n  let err: any;\n  err = new Error(\"Not Found\");\n\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use((err, req, res, next) => {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render(\"error\");\n});\n\n// module.exports = app;\n\nexport const appServer: express.Application = app;\n"]}